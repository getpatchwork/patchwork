[tox]
minversion = 3.2
envlist = pep8,docs,py{37,38,39}-django32,py{38,39,310}-django{40,41}
skipsdist = true
ignore_basepython_conflict = true

[testenv]
basepython = python3
deps =
    -r{toxinidir}/requirements-test.txt
    django32: django~=3.2.0
    django32: djangorestframework~=3.14.0
    django32: django-filter~=22.1.0
    django40: django~=4.0.0
    django40: djangorestframework~=3.14.0
    django40: django-filter~=22.1.0
    django41: django~=4.1.0
    django41: djangorestframework~=3.14.0
    django41: django-filter~=22.1.0
setenv =
    DJANGO_SETTINGS_MODULE = patchwork.settings.dev
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONDEVMODE = 1
    PYTHONWARNINGS = once
passenv =
    http_proxy
    HTTP_PROXY
    https_proxy
    HTTPS_PROXY
    no_proxy
    NO_PROXY
    DATABASE_TYPE
    DATABASE_USER
    DATABASE_PASSWORD
    DATABASE_HOST
    DATABASE_PORT
    DATABASE_NAME
    DJANGO_TEST_PROCESSES
commands =
    python {toxinidir}/manage.py test --noinput --parallel -v 2 --timing -- {posargs:patchwork}

[testenv:bashate]
deps = bashate
whitelist_externals = bash
commands =
    bash -c "find {toxinidir} \
    -not \( -type d -name .?\* -prune \) \
    -not \( -type d -name db -prune \) \
    -name \*.sh -print | xargs bashate -i E006"

[testenv:pep8]
deps =
    black
    flake8
commands =
    black --check --quiet {posargs:patchwork manage.py}
    flake8 {posargs:patchwork manage.py}

[flake8]
# Some rules are ignored as their use makes the code more difficult to read:
#
# E129 visually indented line with same indent as next logical line
# E203 whitespace before ':'
# W503 line break before binary operator
ignore = E129, E203, W503

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build -E -W -b dirhtml -d docs/_build/doctrees docs docs/_build/html {posargs}

[testenv:lint]
deps =
    pylint
    -r{toxinidir}/requirements-prod.txt
commands = pylint patchwork --rcfile=pylint.rc

[testenv:venv]
commands = {posargs}

[testenv:coverage]
deps =
    coverage
    -r{toxinidir}/requirements-dev.txt
setenv =
    DJANGO_SETTINGS_MODULE = patchwork.settings.dev
commands =
    coverage erase
    coverage run --omit=*tox*,patchwork/tests/*.py,manage.py,patchwork/migrations/*.py \
         --branch {toxinidir}/manage.py test --noinput patchwork
    coverage report -m

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
